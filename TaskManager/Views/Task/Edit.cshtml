@model TaskManager.Models.UserTask

@{
    ViewData["Title"] = "Edit Task";
}

<div class="container">
    <div class="row mb-4">
        <div class="col">
            <h1 class="display-4">Edit Task</h1>
        </div>
    </div>

    <div class="row">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-body">
                    <form asp-controller="Task" asp-action="Edit" id="taskForm" method="post">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                        <input type="hidden" asp-for="Id" />

                        <div class="mb-3">
                            <label asp-for="Title" class="form-label"></label>
                            <input asp-for="Title" class="form-control" />
                            <span asp-validation-for="Title" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label"></label>
                            <textarea asp-for="Description" class="form-control" rows="4"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="DueDate" class="form-label"></label>
                            <input asp-for="DueDate" class="form-control" type="date" />
                            <span asp-validation-for="DueDate" class="text-danger"></span>
                        </div>

                        <div class="mb-3 form-check">
                            <input asp-for="IsComplete" class="form-check-input" type="checkbox" />
                            <label asp-for="IsComplete" class="form-check-label"></label>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-light">
                <div class="card-body">
                    <h5 class="card-title">Created On</h5>
                    <p class="card-text">@Model.CreatedDate.ToString("MMMM d, yyyy")</p>

                    <h5 class="card-title mt-3">Status</h5>
                    <p class="card-text">
                        @if (Model.IsComplete)
                        {
                            <span class="badge bg-success">Complete</span>
                        }
                        else
                        {
                            <span class="badge bg-warning">Pending</span>
                        }
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}